.prose {
  @apply text-primary text-base;
}

.prose p {
  @apply mt-0 mb-1;
}

.prose h2 {
  @apply px-2 py-1 mb-4 font-serif-bold text-primary text-2xl rounded-md bg-yellow-block-light dark:bg-yellow-block-dark;
}

.prose h3 {
  @apply font-serif-bold text-xl text-primary mb-4;
}

.prose hr {
  @apply my-8 border-t border-neutral-200 dark:border-neutral-700;
}

.prose a {
  @apply text-blue-500 decoration-blue-500 underline-offset-2;
}

.prose strong {
  @apply text-primary font-serif-bold text-lg;
}

.prose ul {
  list-style-type: '◻️';
  padding-inline-start: 1ch;
  @apply pl-8;
}

.prose li:has(ul) ul {
  list-style-type: '▪';
  padding-inline-start: 1ch;
  @apply my-1;
}

.prose li {
  @apply my-2;

  &::marker {
    @apply text-primary;
  }
}

.prose li:has(input[type='checkbox']) input {
  @apply hidden;
}

.prose code {
  @apply font-mono;
}

/* inline code */
.prose code:not([data-language]) {
  @apply font-serif text-red-500 dark:text-red-400;
  @apply p-1 rounded-md bg-neutral-200 dark:bg-neutral-750;

  &::before,
  &::after {
    @apply content-none;
  }
}

/* code block */
.prose div[data-rehype-pretty-code-fragment] pre {
  counter-reset: line;
  @apply bg-neutral-900;
}

.prose pre code span[data-line]::before {
  counter-increment: line;
  content: counter(line);
  @apply inline-block text-right mr-3 w-4 text-neutral-400;
}

.prose pre code span[data-highlighted-line] {
  @apply bg-yellow-block-light border-l-2 border-yellow-400 dark:border-yellow-500;
}

.prose div[data-rehype-pretty-code-fragment] {
  @apply w-full overflow-hidden rounded-lg my-6;

  pre {
    @apply overflow-x-auto m-0 p-2;
  }
}

.prose blockquote {
  @apply border-l-4 border-yellow-400 dark:border-yellow-500 not-italic;
  @apply bg-neutral-150 dark:bg-neutral-700 text-primary rounded-md px-2 py-1;
}

.prose blockquote p {
  &::before,
  &::after {
    @apply content-none;
  }
}
