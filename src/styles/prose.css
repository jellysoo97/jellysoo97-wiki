.prose {
  @apply text-base text-primary;
}

.prose p {
  @apply mb-1 mt-0 leading-8;
}

.prose p:has(img) {
  @apply relative inline-block aspect-video w-full overflow-hidden;
}

.prose img {
  @apply my-2;
}

.prose h2 {
  @apply mb-4 rounded-md bg-yellow-block-light px-2 py-1 font-serif-bold text-2xl text-primary dark:bg-yellow-block-dark;
}

.prose h3 {
  @apply mb-4 font-serif-bold text-xl text-primary;
}

.prose hr {
  @apply my-8 border-t border-neutral-200 dark:border-neutral-700;
}

.prose a {
  @apply text-blue-500 decoration-blue-500 underline-offset-2;
}

.prose strong {
  @apply font-serif-bold underline underline-offset-2 text-primary;
}

.prose ul {
  @apply parent-ul;
}

.prose li:has(ul) ul {
  @apply child-ul;
}

.prose li {
  @apply my-2;

  &::marker {
    @apply text-primary;
  }
}

.prose li:has(input[type='checkbox']) input {
  @apply hidden;
}

.prose code {
  @apply font-mono;
}

/* inline code */
.prose p:has(code) code {
  @apply rounded-md bg-neutral-200 px-1.5 py-1 font-serif dark:bg-neutral-750;

  &::before,
  &::after {
    @apply content-none;
  }
}

.prose p:has(img) {
  @apply aspect-auto;
}

.prose p:has(code) code span .sh__token--class,
.prose p:has(code) code span .sh__token--sign,
.prose p:has(code) code span .sh__token--property,
.prose p:has(code) code span .sh__token--identifier,
.prose p:has(code) code span .sh__token--string,
.prose p:has(code) code span .sh__token--comment {
  @apply text-base text-red-500 dark:text-red-400 !important;
}

/* code block */
.prose pre:has(code) {
  @apply m-0 my-2 overflow-x-auto bg-neutral-900;
}

.prose pre code {
  counter-reset: sh-line-number;
}

.prose pre code span {
  @apply font-mono text-base leading-7;
}

.prose pre code .sh__line::before {
  counter-increment: sh-line-number 1;
  content: counter(sh-line-number);
  @apply mr-4 text-right text-neutral-200;
}

.prose blockquote {
  @apply border-l-4 border-yellow-400 not-italic dark:border-yellow-500;
  @apply rounded-md bg-neutral-150 p-4 text-primary dark:bg-neutral-700;
}

.prose
  :where(blockquote p:first-of-type):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  &::before,
  &::after {
    @apply content-none !important;
  }
}

.prose li:has(code) code {
  @apply rounded-md bg-neutral-200 px-1.5 py-1 dark:bg-neutral-750;

  &::before,
  &::after {
    @apply content-none;
  }
}

.prose li:has(code) code span .sh__token--class,
.prose li:has(code) code span .sh__token--sign,
.prose li:has(code) code span .sh__token--property,
.prose li:has(code) code span .sh__token--identifier,
.prose li:has(code) code span .sh__token--string,
.prose li:has(code) code span .sh__token--comment {
  @apply text-base text-red-500 dark:text-red-400 !important;
}

.prose
  :where(blockquote code):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  @apply text-base text-red-500 dark:text-red-400;

  &::before,
  &::after {
    @apply content-none;
  }
}

.prose thead {
  @apply bg-neutral-150 dark:bg-neutral-700;
}

.prose thead tr th {
  @apply border-b-[1px] border-r-[1px] border-t-[1px] border-b-neutral-300 border-r-neutral-300 border-t-neutral-300 p-2 text-secondary dark:border-b-neutral-500 dark:border-r-neutral-500 dark:border-t-neutral-500;

  &:last-child {
    @apply border-r-0;
  }
}

.prose tbody tr td {
  @apply border-b-[1px] border-r-[1px] border-b-neutral-300 border-r-neutral-300 p-2 text-secondary dark:border-b-neutral-500 dark:border-r-neutral-500;

  &:last-child {
    @apply border-r-0;
  }
}
